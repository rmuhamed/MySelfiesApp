apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: '../dependencies.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.rmuhamed.sample.myselfiesapp"
        minSdkVersion rootProject.ext.minSDKVersion
        targetSdkVersion rootProject.ext.targetSDKVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_BASE_URL", API_BASE_URL
        buildConfigField "String", "API_CLIENT_ID", CLIENT_ID
        buildConfigField "String", "API_CLIENT_SECRET", CLIENT_SECRET
        buildConfigField "String", "API_REFRESH_TOKEN", REFRESH_TOKEN
    }

    flavorDimensions "tier"

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            crunchPngs false
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            dimension "tier"
            minSdkVersion 28
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            resConfigs "en", "xxhdpi"
        }

        prod {
            dimension "tier"
            versionNameSuffix "-prod"
            applicationIdSuffix '.prod'
        }
    }

    compileOptions {
        incremental true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }
    
    lintOptions {
        abortOnError false
        ignoreWarnings false
        checkAllWarnings true
        htmlReport true
        lintConfig file("lint-config.xml")
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    def uiDependencies = rootProject.ext.uiDependencies
    def archComponentsDependencies = rootProject.ext.architectureComponentsDependencies
    def networkDependencies = rootProject.ext.networkDependencies
    def testDependencies = rootProject.ext.testDependencies
    def kotlinDependencies = rootProject.ext.kotlinDependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation kotlinDependencies.kotlinStdLibJDK
    implementation kotlinDependencies.androidCoreKTX

    implementation uiDependencies.appCompat
    implementation uiDependencies.constraintLayout
    implementation uiDependencies.cameraX
    implementation uiDependencies.cameraCore
    implementation uiDependencies.materialComponents
    implementation uiDependencies.glide
    kapt uiDependencies.glideAnnotationProcessor

    implementation archComponentsDependencies.lifeCycleJava8
    implementation archComponentsDependencies.lifeCycleExtensions

    implementation networkDependencies.okHttp
    implementation networkDependencies.httpLoggingInterceptor
    implementation networkDependencies.gsonConverter
    implementation networkDependencies.retrofit

    androidTestImplementation testDependencies.junitExtensionKTX
    androidTestImplementation testDependencies.coreKTX
    androidTestImplementation testDependencies.espresso

    testImplementation testDependencies.junit
    testImplementation testDependencies.mockito
    testImplementation testDependencies.mockitoKotlin
    testImplementation testDependencies.archCore
}
